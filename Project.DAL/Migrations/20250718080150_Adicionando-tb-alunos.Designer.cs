// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DAL;

#nullable disable

namespace Project.DAL.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250718080150_Adicionando-tb-alunos")]
    partial class Adicionandotbalunos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.DTO.DB.Alunos", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Project.DTO.DB.TB_ADM_USUARIO", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FORCE_ALTERAR_SENHA")
                        .HasColumnType("bit");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD_HASH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD_SALT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Professor")
                        .HasColumnType("bit");

                    b.Property<string>("USUARIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("USUARIO")
                        .IsUnique();

                    b.ToTable("TB_ADM_USUARIO");
                });

            modelBuilder.Entity("Project.DTO.DB.Turmas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Project.DTO.DB.Alunos", b =>
                {
                    b.HasOne("Project.DTO.DB.TB_ADM_USUARIO", "AlunosFK")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.DTO.DB.TB_ADM_USUARIO", "ProfessoresFK")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.DTO.DB.Turmas", "TurmasFK")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlunosFK");

                    b.Navigation("ProfessoresFK");

                    b.Navigation("TurmasFK");
                });

            modelBuilder.Entity("Project.DTO.DB.Turmas", b =>
                {
                    b.HasOne("Project.DTO.DB.TB_ADM_USUARIO", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
