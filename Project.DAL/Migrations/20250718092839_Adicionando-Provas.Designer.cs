// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DAL;

#nullable disable

namespace Project.DAL.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250718092839_Adicionando-Provas")]
    partial class AdicionandoProvas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.DTO.DB.Alternativas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<bool>("Correta")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Letra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("QuestaoId");

                    b.ToTable("Alternativas");
                });

            modelBuilder.Entity("Project.DTO.DB.Alunos", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Project.DTO.DB.Provas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TempoLimite")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Provas");
                });

            modelBuilder.Entity("Project.DTO.DB.ProvasAlunos", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Aprovada")
                        .HasColumnType("bit");

                    b.Property<bool>("Concluida")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("int");

                    b.Property<Guid>("ProvaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecomendacoesChatGPT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RecomendacoesLiberadas")
                        .HasColumnType("bit");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProvaId");

                    b.ToTable("ProvasAlunos");
                });

            modelBuilder.Entity("Project.DTO.DB.Questoes", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("Pontos")
                        .HasColumnType("int");

                    b.Property<Guid>("ProvaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProvaId");

                    b.ToTable("Questoes");
                });

            modelBuilder.Entity("Project.DTO.DB.RespostasAlunos", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<Guid>("AlternativaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Correta")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PontosObtidos")
                        .HasColumnType("int");

                    b.Property<Guid>("ProvaAlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AlternativaId");

                    b.HasIndex("ProvaAlunoId");

                    b.HasIndex("QuestaoId");

                    b.ToTable("RespostasAlunos");
                });

            modelBuilder.Entity("Project.DTO.DB.TB_ADM_USUARIO", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FORCE_ALTERAR_SENHA")
                        .HasColumnType("bit");

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD_HASH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD_SALT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Professor")
                        .HasColumnType("bit");

                    b.Property<string>("USUARIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("USUARIO")
                        .IsUnique();

                    b.ToTable("TB_ADM_USUARIO");
                });

            modelBuilder.Entity("Project.DTO.DB.Turmas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ATIVO")
                        .HasColumnType("bit");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DATA_CRIACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DATA_MODIFICACAO")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_CRIACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USUARIO_MODIFICACAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Project.DTO.DB.Alternativas", b =>
                {
                    b.HasOne("Project.DTO.DB.Questoes", "Questao")
                        .WithMany("Alternativas")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("Project.DTO.DB.Alunos", b =>
                {
                    b.HasOne("Project.DTO.DB.TB_ADM_USUARIO", "AlunosFK")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.DTO.DB.TB_ADM_USUARIO", "ProfessoresFK")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.DTO.DB.Turmas", "TurmasFK")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlunosFK");

                    b.Navigation("ProfessoresFK");

                    b.Navigation("TurmasFK");
                });

            modelBuilder.Entity("Project.DTO.DB.Provas", b =>
                {
                    b.HasOne("Project.DTO.DB.TB_ADM_USUARIO", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.DTO.DB.Turmas", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Project.DTO.DB.ProvasAlunos", b =>
                {
                    b.HasOne("Project.DTO.DB.TB_ADM_USUARIO", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.DTO.DB.Provas", "Prova")
                        .WithMany("ProvasAlunos")
                        .HasForeignKey("ProvaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Prova");
                });

            modelBuilder.Entity("Project.DTO.DB.Questoes", b =>
                {
                    b.HasOne("Project.DTO.DB.Provas", "Prova")
                        .WithMany("Questoes")
                        .HasForeignKey("ProvaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Prova");
                });

            modelBuilder.Entity("Project.DTO.DB.RespostasAlunos", b =>
                {
                    b.HasOne("Project.DTO.DB.Alternativas", "Alternativa")
                        .WithMany()
                        .HasForeignKey("AlternativaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.DTO.DB.ProvasAlunos", "ProvaAluno")
                        .WithMany("RespostasAlunos")
                        .HasForeignKey("ProvaAlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project.DTO.DB.Questoes", "Questao")
                        .WithMany()
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alternativa");

                    b.Navigation("ProvaAluno");

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("Project.DTO.DB.Turmas", b =>
                {
                    b.HasOne("Project.DTO.DB.TB_ADM_USUARIO", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Project.DTO.DB.Provas", b =>
                {
                    b.Navigation("ProvasAlunos");

                    b.Navigation("Questoes");
                });

            modelBuilder.Entity("Project.DTO.DB.ProvasAlunos", b =>
                {
                    b.Navigation("RespostasAlunos");
                });

            modelBuilder.Entity("Project.DTO.DB.Questoes", b =>
                {
                    b.Navigation("Alternativas");
                });
#pragma warning restore 612, 618
        }
    }
}
